
package sv;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FuncionesSoap", targetNamespace = "http://sv/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FuncionesSoap {


    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://sv/", className = "sv.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://sv/", className = "sv.HelloResponse")
    @Action(input = "http://sv/FuncionesSoap/helloRequest", output = "http://sv/FuncionesSoap/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param valor
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Eurodolar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Eurodolar", targetNamespace = "http://sv/", className = "sv.Eurodolar")
    @ResponseWrapper(localName = "EurodolarResponse", targetNamespace = "http://sv/", className = "sv.EurodolarResponse")
    @Action(input = "http://sv/FuncionesSoap/EurodolarRequest", output = "http://sv/FuncionesSoap/EurodolarResponse")
    public double eurodolar(
        @WebParam(name = "valor", targetNamespace = "")
        double valor);

    /**
     * 
     * @param valor1
     * @param valor2
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Resta")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Resta", targetNamespace = "http://sv/", className = "sv.Resta")
    @ResponseWrapper(localName = "RestaResponse", targetNamespace = "http://sv/", className = "sv.RestaResponse")
    @Action(input = "http://sv/FuncionesSoap/RestaRequest", output = "http://sv/FuncionesSoap/RestaResponse")
    public String resta(
        @WebParam(name = "valor1", targetNamespace = "")
        double valor1,
        @WebParam(name = "valor2", targetNamespace = "")
        double valor2);

    /**
     * 
     * @param valor1
     * @param valor2
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Division")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Division", targetNamespace = "http://sv/", className = "sv.Division")
    @ResponseWrapper(localName = "DivisionResponse", targetNamespace = "http://sv/", className = "sv.DivisionResponse")
    @Action(input = "http://sv/FuncionesSoap/DivisionRequest", output = "http://sv/FuncionesSoap/DivisionResponse")
    public String division(
        @WebParam(name = "valor1", targetNamespace = "")
        double valor1,
        @WebParam(name = "valor2", targetNamespace = "")
        double valor2);

    /**
     * 
     * @param valor1
     * @param valor2
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Multiplicacion")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Multiplicacion", targetNamespace = "http://sv/", className = "sv.Multiplicacion")
    @ResponseWrapper(localName = "MultiplicacionResponse", targetNamespace = "http://sv/", className = "sv.MultiplicacionResponse")
    @Action(input = "http://sv/FuncionesSoap/MultiplicacionRequest", output = "http://sv/FuncionesSoap/MultiplicacionResponse")
    public String multiplicacion(
        @WebParam(name = "valor1", targetNamespace = "")
        double valor1,
        @WebParam(name = "valor2", targetNamespace = "")
        double valor2);

    /**
     * 
     * @param valor1
     * @param valor2
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Suma")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Suma", targetNamespace = "http://sv/", className = "sv.Suma")
    @ResponseWrapper(localName = "SumaResponse", targetNamespace = "http://sv/", className = "sv.SumaResponse")
    @Action(input = "http://sv/FuncionesSoap/SumaRequest", output = "http://sv/FuncionesSoap/SumaResponse")
    public String suma(
        @WebParam(name = "valor1", targetNamespace = "")
        double valor1,
        @WebParam(name = "valor2", targetNamespace = "")
        double valor2);

    /**
     * 
     * @param password
     * @param usuario
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "LoguinAcceso")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "LoguinAcceso", targetNamespace = "http://sv/", className = "sv.LoguinAcceso")
    @ResponseWrapper(localName = "LoguinAccesoResponse", targetNamespace = "http://sv/", className = "sv.LoguinAccesoResponse")
    @Action(input = "http://sv/FuncionesSoap/LoguinAccesoRequest", output = "http://sv/FuncionesSoap/LoguinAccesoResponse")
    public String loguinAcceso(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param masa
     * @param velocidad
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EnergiaCinetica")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EnergiaCinetica", targetNamespace = "http://sv/", className = "sv.EnergiaCinetica")
    @ResponseWrapper(localName = "EnergiaCineticaResponse", targetNamespace = "http://sv/", className = "sv.EnergiaCineticaResponse")
    @Action(input = "http://sv/FuncionesSoap/EnergiaCineticaRequest", output = "http://sv/FuncionesSoap/EnergiaCineticaResponse")
    public String energiaCinetica(
        @WebParam(name = "masa", targetNamespace = "")
        double masa,
        @WebParam(name = "velocidad", targetNamespace = "")
        double velocidad);

    /**
     * 
     * @param masa
     * @param acelaracion
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Calcular_la_Fuerza")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Calcular_la_Fuerza", targetNamespace = "http://sv/", className = "sv.CalcularLaFuerza")
    @ResponseWrapper(localName = "Calcular_la_FuerzaResponse", targetNamespace = "http://sv/", className = "sv.CalcularLaFuerzaResponse")
    @Action(input = "http://sv/FuncionesSoap/Calcular_la_FuerzaRequest", output = "http://sv/FuncionesSoap/Calcular_la_FuerzaResponse")
    public String calcularLaFuerza(
        @WebParam(name = "masa", targetNamespace = "")
        double masa,
        @WebParam(name = "acelaracion", targetNamespace = "")
        double acelaracion);

    /**
     * 
     * @param tiempo
     * @param velocidad
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "MovimientoUniforme")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "MovimientoUniforme", targetNamespace = "http://sv/", className = "sv.MovimientoUniforme")
    @ResponseWrapper(localName = "MovimientoUniformeResponse", targetNamespace = "http://sv/", className = "sv.MovimientoUniformeResponse")
    @Action(input = "http://sv/FuncionesSoap/MovimientoUniformeRequest", output = "http://sv/FuncionesSoap/MovimientoUniformeResponse")
    public String movimientoUniforme(
        @WebParam(name = "velocidad", targetNamespace = "")
        double velocidad,
        @WebParam(name = "tiempo", targetNamespace = "")
        double tiempo);

}
