
package sv;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FuncionesSoap", targetNamespace = "http://sv/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FuncionesSoap {


    /**
     * 
     * @param potencia
     * @param valor
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Potencia")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Potencia", targetNamespace = "http://sv/", className = "sv.Potencia")
    @ResponseWrapper(localName = "PotenciaResponse", targetNamespace = "http://sv/", className = "sv.PotenciaResponse")
    @Action(input = "http://sv/FuncionesSoap/PotenciaRequest", output = "http://sv/FuncionesSoap/PotenciaResponse")
    public double potencia(
        @WebParam(name = "valor", targetNamespace = "")
        double valor,
        @WebParam(name = "potencia", targetNamespace = "")
        int potencia);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://sv/", className = "sv.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://sv/", className = "sv.HelloResponse")
    @Action(input = "http://sv/FuncionesSoap/helloRequest", output = "http://sv/FuncionesSoap/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param valor
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Eurodoll")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Eurodoll", targetNamespace = "http://sv/", className = "sv.Eurodoll")
    @ResponseWrapper(localName = "EurodollResponse", targetNamespace = "http://sv/", className = "sv.EurodollResponse")
    @Action(input = "http://sv/FuncionesSoap/EurodollRequest", output = "http://sv/FuncionesSoap/EurodollResponse")
    public double eurodoll(
        @WebParam(name = "valor", targetNamespace = "")
        double valor);

    /**
     * 
     * @param valor
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "NumPrimo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "NumPrimo", targetNamespace = "http://sv/", className = "sv.NumPrimo")
    @ResponseWrapper(localName = "NumPrimoResponse", targetNamespace = "http://sv/", className = "sv.NumPrimoResponse")
    @Action(input = "http://sv/FuncionesSoap/NumPrimoRequest", output = "http://sv/FuncionesSoap/NumPrimoResponse")
    public String numPrimo(
        @WebParam(name = "valor", targetNamespace = "")
        int valor);

    /**
     * 
     * @param palabra
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Diccionario")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Diccionario", targetNamespace = "http://sv/", className = "sv.Diccionario")
    @ResponseWrapper(localName = "DiccionarioResponse", targetNamespace = "http://sv/", className = "sv.DiccionarioResponse")
    @Action(input = "http://sv/FuncionesSoap/DiccionarioRequest", output = "http://sv/FuncionesSoap/DiccionarioResponse")
    public String diccionario(
        @WebParam(name = "Palabra", targetNamespace = "")
        String palabra);

}
