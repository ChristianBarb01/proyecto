
package ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSOperaciones", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSOperaciones {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod(operationName = "Registrar")
    @RequestWrapper(localName = "Registrar", targetNamespace = "http://ws/", className = "ws.Registrar")
    @ResponseWrapper(localName = "RegistrarResponse", targetNamespace = "http://ws/", className = "ws.RegistrarResponse")
    @Action(input = "http://ws/WSOperaciones/RegistrarRequest", output = "http://ws/WSOperaciones/RegistrarResponse")
    public void registrar(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod(operationName = "Retirar")
    @RequestWrapper(localName = "Retirar", targetNamespace = "http://ws/", className = "ws.Retirar")
    @ResponseWrapper(localName = "RetirarResponse", targetNamespace = "http://ws/", className = "ws.RetirarResponse")
    @Action(input = "http://ws/WSOperaciones/RetirarRequest", output = "http://ws/WSOperaciones/RetirarResponse")
    public void retirar(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "LoguinAcceso")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "LoguinAcceso", targetNamespace = "http://ws/", className = "ws.LoguinAcceso")
    @ResponseWrapper(localName = "LoguinAccesoResponse", targetNamespace = "http://ws/", className = "ws.LoguinAccesoResponse")
    @Action(input = "http://ws/WSOperaciones/LoguinAccesoRequest", output = "http://ws/WSOperaciones/LoguinAccesoResponse")
    public boolean loguinAcceso(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod(operationName = "Depositar")
    @RequestWrapper(localName = "Depositar", targetNamespace = "http://ws/", className = "ws.Depositar")
    @ResponseWrapper(localName = "DepositarResponse", targetNamespace = "http://ws/", className = "ws.DepositarResponse")
    @Action(input = "http://ws/WSOperaciones/DepositarRequest", output = "http://ws/WSOperaciones/DepositarResponse")
    public void depositar(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1);

    /**
     * 
     */
    @WebMethod(operationName = "Cargardatos")
    @RequestWrapper(localName = "Cargardatos", targetNamespace = "http://ws/", className = "ws.Cargardatos")
    @ResponseWrapper(localName = "CargardatosResponse", targetNamespace = "http://ws/", className = "ws.CargardatosResponse")
    @Action(input = "http://ws/WSOperaciones/CargardatosRequest", output = "http://ws/WSOperaciones/CargardatosResponse")
    public void cargardatos();

}
